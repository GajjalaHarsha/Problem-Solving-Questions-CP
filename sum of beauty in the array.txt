You are given a 0-indexed integer array nums. For each index i (1 <= i <= nums.length - 2) the beauty of nums[i] equals:

2, if nums[j] < nums[i] < nums[k], for all 0 <= j < i and for all i < k <= nums.length - 1.
1, if nums[i - 1] < nums[i] < nums[i + 1], and the previous condition is not satisfied.
0, if none of the previous conditions holds.
Return the sum of beauty of all nums[i] where 1 <= i <= nums.length - 2.

 

Example 1:

Input: nums = [1,2,3]
Output: 2
Explanation: For each index i in the range 1 <= i <= 1:
- The beauty of nums[1] equals 2.
Example 2:

Input: nums = [2,4,6,4]
Output: 1
Explanation: For each index i in the range 1 <= i <= 2:
- The beauty of nums[1] equals 1.
- The beauty of nums[2] equals 0.
Example 3:

Input: nums = [3,2,1]
Output: 0
Explanation: For each index i in the range 1 <= i <= 1:
- The beauty of nums[1] equals 0.
 

Constraints:

3 <= nums.length <= 105
1 <= nums[i] <= 105

















python:


class Solution:
    def sumOfBeauties(self, nums: List[int]) -> int:
        maximum=[0]*len(nums)
        minimum=[0]*len(nums)
        for i in range(len(nums)):
            if(i==0):
                maximum[0]=nums[0]
            else:
                maximum[i]=max(maximum[i-1], nums[i])
                # if(nums[i]>maximum[i-1]):
                #     maximum[i]=nums[i]
                # else:
                #     maximum[i]=maximum[i-1]
        for i in range(len(nums)-1, -1, -1):
            if(i==len(nums)-1):
                minimum[i]=nums[i]
            else:
                minimum[i]=min(minimum[i+1], nums[i])
        count=0
        for i in range(1, len(nums)-1):
            if(maximum[i-1]<nums[i]<minimum[i+1]):
                count+=2
            elif(nums[i-1]<nums[i]<nums[i+1]):
                count+=1
        return count