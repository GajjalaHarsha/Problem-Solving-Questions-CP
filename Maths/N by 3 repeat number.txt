N/3 Repeat Number
Problem Description

You're given a read only array of n integers. Find out if any integer occurs more than n/3 times in the array in linear time and constant additional space.
If so, return the integer. If not, return -1.

If there are multiple solutions, return any one.

Example:

Input: [1 2 3 1 1]
Output: 1 
1 occurs 3 times which is more than 5/3 times.














public class Solution {
	// DO NOT MODIFY THE LIST
	public int repeatedNumber(final List<Integer> a) {
	    int count=0;
	    int count1=0;
	    int mj=0;
	    int mj1=0;
	    for(int i=0;i<a.size();i++) {
	        if(count==0 && a.get(i)!=mj1) {
	            mj=a.get(i);
	            count=1;
	        }
	        else if(count1==0 && a.get(i)!=mj) {
	            mj1=a.get(i);
	            count1=1;
	        }
	        else {
	            if(count>0 && count1>0 && mj!=a.get(i) && mj1!=a.get(i)) {
	                count-=1;
	                count1-=1;
	            }
	            if(mj==a.get(i)) {
	                count+=1;
	            }
	            if(mj1==a.get(i)) {
	                count1+=1;
	            }
	        }
	       // System.out.println(mj+" "+mj1+" "+count+" "+count1);
	    }
	    int totcount=0;
	    int totcount1=0;
	    for(int i=0;i<a.size();i++) {
	        if(a.get(i)==mj) {
	            totcount+=1;
	        }
	         if(a.get(i)==mj1) {
	            totcount1+=1;
	        }
	    }
	    if(totcount>=a.size()/3+1)
	        return mj;
	    else if(totcount1>=a.size()/3+1)
	        return mj1;
	   else
	        return -1;
	}
}
